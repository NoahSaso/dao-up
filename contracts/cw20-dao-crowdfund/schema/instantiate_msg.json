{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "InstantiateMsg",
  "type": "object",
  "required": [
    "campaign_info",
    "cw20_code_id",
    "dao_address",
    "fee_manager_address",
    "funding_goal",
    "funding_token_name",
    "funding_token_symbol"
  ],
  "properties": {
    "campaign_info": {
      "$ref": "#/definitions/Campaign"
    },
    "cw20_code_id": {
      "description": "Code ID for the cw20 contract we should use for the fundraising token.",
      "type": "integer",
      "format": "uint64",
      "minimum": 0.0
    },
    "dao_address": {
      "type": "string"
    },
    "fee_manager_address": {
      "type": "string"
    },
    "funding_goal": {
      "$ref": "#/definitions/Coin"
    },
    "funding_token_name": {
      "type": "string"
    },
    "funding_token_symbol": {
      "type": "string"
    }
  },
  "definitions": {
    "Campaign": {
      "type": "object",
      "required": [
        "description",
        "description_image_urls",
        "hidden",
        "name"
      ],
      "properties": {
        "description": {
          "type": "string"
        },
        "description_image_urls": {
          "description": "The image URLs displayed with the campaign's description.",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "discord": {
          "type": [
            "string",
            "null"
          ]
        },
        "hidden": {
          "type": "boolean"
        },
        "name": {
          "type": "string"
        },
        "profile_image_url": {
          "description": "The image URL used as the campaign's profile photo.",
          "type": [
            "string",
            "null"
          ]
        },
        "twitter": {
          "type": [
            "string",
            "null"
          ]
        },
        "website": {
          "type": [
            "string",
            "null"
          ]
        }
      }
    },
    "Coin": {
      "type": "object",
      "required": [
        "amount",
        "denom"
      ],
      "properties": {
        "amount": {
          "$ref": "#/definitions/Uint128"
        },
        "denom": {
          "type": "string"
        }
      }
    },
    "Uint128": {
      "description": "A thin wrapper around u128 that is using strings for JSON encoding/decoding, such that the full u128 range can be used for clients that convert JSON numbers to floats, like JavaScript and jq.\n\n# Examples\n\nUse `from` to create instances of this and `u128` to get the value out:\n\n``` # use cosmwasm_std::Uint128; let a = Uint128::from(123u128); assert_eq!(a.u128(), 123);\n\nlet b = Uint128::from(42u64); assert_eq!(b.u128(), 42);\n\nlet c = Uint128::from(70u32); assert_eq!(c.u128(), 70); ```",
      "type": "string"
    }
  }
}
